---
- name: Ping VMs and Restart if Unreachable
  hosts: all
  ignore_unreachable: true
  gather_facts: no
  become: yes
  vars:
    proxmox_ssh_key: "/home/semaphore/semaphore"  # Path to your private SSH key file
    your_proxmox_username: "sshuser"
    your_proxmox_host: "10.10.1.10"
  tasks:
    - name: Ping VMs in lxc
      command: "ping -c 1 {{ ansible_host }}"  # Sends 1 ping packets to each host
      register: ping_result_lxc
      changed_when: false
      failed_when: ping_result_lxc.rc != 0
      ignore_errors: yes
      ignore_unreachable: true
      when: inventory_hostname in groups['lxc']

    - name: Restart VMs in lxcs if ping fails
      #shell: |
      #  if [ "{{ ping_result_lxc.rc }}" != "0" ]; then
      #    ssh -i "{{ proxmox_ssh_key }}" -oStrictHostKeyChecking=no sshuser@10.10.1.10 "/usr/sbin/pct start {{ hostvars[inventory_hostname]['vm_id'] }}"
      #  fi
      shell: |
        if [ "{{ 'rc' in ping_result_lxc }}" ]; then
          if [ "{{ ping_result_lxc.rc }}" != "0" ]; then
            ssh -i "{{ proxmox_ssh_key }}" -oStrictHostKeyChecking=no sshuser@10.10.1.10 "/usr/sbin/pct start {{ hostvars[inventory_hostname]['vm_id'] }}"
          fi
        fi
        else
          # Handle unreachable hosts
          # For example, you can print a message or take appropriate action
          debug:
            msg: "Host {{ inventory_hostname }} is unreachable: {{ ping_result_lxc.msg }}"
      #debug:
      #  var: ping_result_lxc
      #  msg: "Inventory hostname: {{ inventory_hostname }}, Item: {{ hostvars[inventory_hostname]['vm_id'] }}"
      loop: "{{ groups['lxc'] }}"
      loop_control:
        loop_var: hostvars[inventory_hostname]['vm_id']