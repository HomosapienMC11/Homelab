---
#the dron timing: */10 * * * *
#Check Proxmox if Its Running-------------------------------------------------------------------------------------------
- name: Ping Main IPs
  hosts: localhost
  gather_facts: no
  become: false
  vars_files:
    - vars/homelab_common_vars.yml
  #Initial Pings
  tasks:
    #ping IDRAC
    - name: ICMP ping of IDRAC
      check_mode: true
      command: ping -c 2 "{{ item }}"
      ignore_unreachable: true
      ignore_errors: yes
      changed_when: ping_results.rc != 0
      loop:
        - "{{ IP_IDRAC }}"
        - "{{ your_proxmox_host }}"
        - "{{ IP_TrueNAS }}"
      register: ping_results
    #set facts
    - set_fact:
        fix_IDRAC: true
      when: ping_results.results[0].rc != 0

    - set_fact:
        fix_proxmox: true
      when: ping_results.results[1].rc != 0

    - set_fact:
        fix_TrueNAS: true
      when: ping_results.results[2].rc != 0

#Fix Proxmox
- name: Fix Server #send commands via IDRAC
  run_once: true
  import_playbook: start-server
  when: fix_proxmox | default(false)

#Fix TN
- name: Fix TrueNAS if Ded
  run_once: true
  import_playbook: reboot-truenas
  when: fix_TrueNAS | default(false)

#Check VMs
- name: Check VMs
  run_once: true
  import_playbook: automate-reboots-vms

#Check LXCs
- name: Check LXCs
  run_once: true
  import_playbook: automate-reboots-lxcs

#Check for Mounts on Bellow Groups----------------------------------------------------------------------------------------------
- name: Mount Checks
  hosts: SMB:ZM
  gather_facts: no
  become: false
  vars_files:
    - vars/homelab_common_vars.yml
  vars:
    needs_mounting: false
  tasks:
    - name: Check if SMB share is mounted
      ansible.builtin.shell: mount | grep -q '/mnt/SASma'
      register: smb_mount_check
      changed_when: false
      ignore_errors: true

    - set_fact:
        needs_mounting: true
      when: smb_mount_check.rc == 1

# Execute mount -a command with sudo when host belongs to SMB or ZM group
- name: Mounts All if Needed
  check_mode: true
  run_once: true
  import_playbook: mount-all
  when: needs_mounting | default(false)

#----------------------------------------------------------------------------------------------